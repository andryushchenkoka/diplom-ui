plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
    id "io.freefair.lombok" version "6.5.0.3"
}

group 'com.tricentis.demowebshop'

repositories {
    mavenCentral()
}

def selenide = "6.11.1",
    restAssured = "5.3.0",
    allureListener = "2.20.1",
    allureVersion = "2.19.0",
    junitJupiter = "5.9.1"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenide",
            "io.rest-assured:rest-assured:$restAssured",
            "io.qameta.allure:allure-selenide:$allureListener",
            "io.qameta.allure:allure-rest-assured:$allureListener",
            "org.projectlombok:lombok:1.18.24",
            "org.junit.jupiter:junit-jupiter:$junitJupiter",
            "com.fasterxml.jackson.core:jackson-databind:2.14.1",
            "org.aspectj:aspectjweaver:1.9.19",
            "org.assertj:assertj-core:3.23.1",
            "org.aeonbits.owner:owner:1.0.12",
            "org.slf4j:slf4j-simple:2.0.5"
    )
}

test {
    systemProperties(System.getProperties())
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    systemProperty 'junit.jupiter.execution.parallel.enabled', 'true'
    systemProperty 'junit.jupiter.execution.parallel.mode.default', 'concurrent'
    systemProperty 'junit.jupiter.execution.parallel.config.strategy', 'fixed'
    systemProperty 'junit.jupiter.execution.parallel.config.fixed.parallelism', System.getProperty('threads', '1')

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}